// <auto-generated />
using System;
using GameStore.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameStore.DAL.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20230116161729_CreatePublisherUpdateTrigger")]
    partial class CreatePublisherUpdateTrigger
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQuote")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ParentCommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.GenresInGames", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GenresInGames");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GameId = 1
                        },
                        new
                        {
                            GenreId = 3,
                            GameId = 2
                        },
                        new
                        {
                            GenreId = 5,
                            GameId = 3
                        },
                        new
                        {
                            GenreId = 11,
                            GameId = 4
                        },
                        new
                        {
                            GenreId = 3,
                            GameId = 5
                        },
                        new
                        {
                            GenreId = 11,
                            GameId = 6
                        },
                        new
                        {
                            GenreId = 6,
                            GameId = 7
                        },
                        new
                        {
                            GenreId = 12,
                            GameId = 8
                        },
                        new
                        {
                            GenreId = 14,
                            GameId = 9
                        },
                        new
                        {
                            GenreId = 7,
                            GameId = 10
                        },
                        new
                        {
                            GenreId = 8,
                            GameId = 11
                        },
                        new
                        {
                            GenreId = 8,
                            GameId = 12
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipperCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("GameKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GameKey");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.PlatformsInGames", b =>
                {
                    b.Property<int>("PlatformTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("PlatformTypeId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("PlatformsInGames");

                    b.HasData(
                        new
                        {
                            PlatformTypeId = 1,
                            GameId = 1
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            GameId = 1
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            GameId = 2
                        },
                        new
                        {
                            PlatformTypeId = 4,
                            GameId = 3
                        },
                        new
                        {
                            PlatformTypeId = 3,
                            GameId = 4
                        },
                        new
                        {
                            PlatformTypeId = 3,
                            GameId = 5
                        },
                        new
                        {
                            PlatformTypeId = 3,
                            GameId = 6
                        },
                        new
                        {
                            PlatformTypeId = 1,
                            GameId = 7
                        },
                        new
                        {
                            PlatformTypeId = 4,
                            GameId = 8
                        },
                        new
                        {
                            PlatformTypeId = 4,
                            GameId = 9
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            GameId = 10
                        },
                        new
                        {
                            PlatformTypeId = 1,
                            GameId = 11
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            GameId = 12
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "c158cacf-c7b8-4afd-acb0-17e501d05eb5",
                            Email = "admin@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 165, 74, 154, 64, 107, 39, 149, 206, 29, 182, 125, 35, 188, 200, 189, 147, 197, 206, 132, 248, 157, 6, 114, 185, 63, 3, 60, 131, 228, 243, 206, 31, 60, 39, 178, 2, 234, 54, 24, 110, 239, 89, 35, 1, 153, 9, 115, 131, 219, 45, 141, 56, 103, 214, 106, 154, 23, 153, 209, 30, 69, 59, 167, 36 },
                            PasswordSalt = new byte[] { 86, 227, 227, 248, 6, 248, 173, 217, 175, 241, 25, 60, 201, 21, 230, 205, 143, 33, 24, 241, 148, 180, 124, 221 },
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "5651a314-1379-4b89-b64d-747502cb43ec",
                            Email = "user1@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 4, 103, 108, 126, 127, 190, 238, 174, 32, 100, 46, 195, 154, 156, 213, 175, 173, 136, 37, 25, 8, 85, 81, 52, 4, 67, 240, 179, 112, 43, 232, 64, 255, 55, 103, 37, 43, 212, 100, 111, 145, 58, 53, 56, 199, 223, 176, 229, 33, 144, 241, 22, 72, 1, 82, 123, 61, 17, 253, 244, 91, 254, 68, 62 },
                            PasswordSalt = new byte[] { 119, 231, 101, 44, 177, 107, 136, 60, 123, 95, 95, 1, 246, 250, 71, 156, 161, 85, 109, 227, 26, 132, 32, 184 },
                            Role = "User",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = "e35c844a-bb78-443f-aacf-ccc367db34ef",
                            Email = "manager1@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 85, 198, 88, 56, 47, 233, 3, 123, 186, 34, 208, 87, 231, 171, 118, 175, 198, 172, 174, 70, 17, 105, 223, 183, 253, 1, 108, 197, 231, 16, 32, 60, 57, 137, 52, 38, 132, 163, 167, 211, 114, 244, 190, 238, 97, 228, 60, 101, 81, 61, 69, 120, 120, 199, 171, 124, 69, 182, 238, 6, 90, 125, 32, 121 },
                            PasswordSalt = new byte[] { 138, 203, 177, 233, 72, 157, 248, 20, 130, 137, 47, 143, 69, 112, 222, 57, 20, 71, 187, 83, 207, 223, 147, 26 },
                            Role = "Manager",
                            UserName = "manager1"
                        },
                        new
                        {
                            Id = "8ee6bdea-f473-429d-9ff0-4c05486d0b19",
                            Email = "moderator@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 196, 252, 18, 224, 227, 245, 57, 176, 15, 171, 42, 125, 127, 63, 15, 58, 158, 168, 39, 216, 209, 38, 143, 18, 0, 249, 158, 31, 186, 203, 209, 121, 226, 159, 50, 190, 118, 96, 153, 11, 201, 126, 204, 65, 232, 147, 252, 186, 196, 222, 28, 185, 9, 252, 77, 143, 213, 55, 121, 118, 138, 196, 39, 177 },
                            PasswordSalt = new byte[] { 179, 201, 170, 37, 249, 124, 108, 248, 139, 192, 50, 95, 212, 232, 4, 117, 236, 33, 174, 250, 172, 60, 28, 249 },
                            Role = "Moderator",
                            UserName = "moderator1"
                        },
                        new
                        {
                            Id = "b59f55ec-6349-461a-9197-d73080ee480e",
                            Email = "publisher1@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 37, 44, 8, 196, 247, 103, 119, 201, 92, 206, 250, 133, 233, 59, 20, 141, 8, 7, 126, 231, 84, 165, 19, 132, 139, 160, 130, 37, 76, 70, 93, 1, 195, 97, 114, 66, 161, 5, 169, 243, 121, 248, 135, 19, 233, 216, 20, 34, 149, 52, 182, 36, 50, 221, 220, 107, 54, 50, 15, 32, 54, 238, 220, 233 },
                            PasswordSalt = new byte[] { 134, 79, 51, 27, 72, 125, 1, 62, 212, 188, 97, 190, 215, 211, 114, 198, 213, 49, 151, 29, 172, 64, 156, 121 },
                            PublisherName = "DeepSilver",
                            Role = "Publisher",
                            UserName = "publisher1"
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Games.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("NumberOfViews")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityPerUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<int>("UnitsOnOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(7157),
                            Description = "New part of Stalker",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "stalker-2",
                            Name = "Stalker2",
                            NumberOfViews = 0,
                            Price = 70m,
                            PublishedAt = new DateTime(2022, 10, 8, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9369),
                            PublisherName = "GSC",
                            ReorderLevel = 0,
                            UnitsInStock = (short)10,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9645),
                            Description = "Best part",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "dying-light",
                            Name = "Dying light",
                            NumberOfViews = 0,
                            Price = 50m,
                            PublishedAt = new DateTime(2022, 11, 27, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9708),
                            PublisherName = "DeepSiler",
                            ReorderLevel = 0,
                            UnitsInStock = (short)0,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9723),
                            Description = "Action ",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "left-4-dead",
                            Name = "Left 4 Dead",
                            NumberOfViews = 0,
                            Price = 100m,
                            PublishedAt = new DateTime(2021, 12, 12, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9725),
                            PublisherName = "GSC",
                            ReorderLevel = 0,
                            UnitsInStock = (short)3,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9726),
                            Description = "Description of cmv",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "call-of-duty-mv",
                            Name = "Call of Duty:MV",
                            NumberOfViews = 0,
                            Price = 30m,
                            PublishedAt = new DateTime(2023, 1, 9, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9728),
                            PublisherName = "Activision",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9728),
                            Description = "Description of civ",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "civiization-VI",
                            Name = "Sid Meier`s Civilization VI",
                            NumberOfViews = 0,
                            Price = 60m,
                            PublishedAt = new DateTime(2022, 12, 17, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9730),
                            PublisherName = "Firaxis",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9730),
                            Description = "Description of arma",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "arma-3",
                            Name = "Arma 3",
                            NumberOfViews = 0,
                            Price = 80m,
                            PublishedAt = new DateTime(2022, 11, 17, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9733),
                            PublisherName = "Bohemia Interactive",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9734),
                            Description = "Description of nfs",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "nfs",
                            Name = "Need for speed",
                            NumberOfViews = 0,
                            Price = 100m,
                            PublishedAt = new DateTime(2022, 11, 27, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9735),
                            PublisherName = "GSC",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9736),
                            Description = "Description of Sam",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "serious-sam-4",
                            Name = "Serious Sam 4",
                            NumberOfViews = 0,
                            Price = 45m,
                            PublishedAt = new DateTime(2023, 1, 1, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9737),
                            PublisherName = "Activision",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9738),
                            Description = "Description of Sea",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "sea-of-thieves",
                            Name = "Sea of Thieves",
                            NumberOfViews = 0,
                            Price = 90m,
                            PublishedAt = new DateTime(2022, 11, 27, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9739),
                            PublisherName = "GSC",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9740),
                            Description = "Description of Battlefield",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "battlefield-4",
                            Name = "Battlefield 4",
                            NumberOfViews = 0,
                            Price = 100m,
                            PublishedAt = new DateTime(2022, 12, 17, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9742),
                            PublisherName = "Firaxis",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 11,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9743),
                            Description = "Description of Mass effect 1",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "mass-effect-1",
                            Name = "Mass effect 1",
                            NumberOfViews = 0,
                            Price = 50m,
                            PublishedAt = new DateTime(2022, 12, 27, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9747),
                            PublisherName = "DeepSiler",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 12,
                            AddedAt = new DateTime(2023, 1, 16, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9748),
                            Description = "Description of Command and conqurer",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "command-and-conqurer",
                            Name = "Command and conqurer",
                            NumberOfViews = 0,
                            Price = 150m,
                            PublishedAt = new DateTime(2022, 11, 17, 16, 17, 28, 875, DateTimeKind.Utc).AddTicks(9749),
                            PublisherName = "Activision",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Games.GameTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityPerUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameTranslates");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ParentGenreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentGenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "RTS",
                            ParentGenreId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "TBS",
                            ParentGenreId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Races"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Rally",
                            ParentGenreId = 6
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Arcade",
                            ParentGenreId = 6
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Formula",
                            ParentGenreId = 6
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Off-road",
                            ParentGenreId = 6
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "FPS",
                            ParentGenreId = 11
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "TPS",
                            ParentGenreId = 11
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            Name = "Misc"
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.GenreTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("GenreTranslates");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Platforms.PlatformType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("PlatformTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Type = "Browser"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Platforms.PlatformTypeTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlatformTypeId");

                    b.ToTable("PlatformTypeTranslates");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Publishers.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("ntext");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "DeepSilver",
                            Description = "Desc of Publisher 1 ",
                            HomePage = "Home",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "GSC",
                            Description = "Desc of Publisher 2 ",
                            HomePage = "Home2",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Activision",
                            Description = "Desc of Activision",
                            HomePage = "Activision page",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "Firaxis",
                            Description = "Desc of Firaxis",
                            HomePage = "Firaxis page",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            CompanyName = "Bohemia Interactive",
                            Description = "Desc of bohemia",
                            HomePage = "Bohemia page",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Publishers.PublisherTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("PublisherTranslates");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.Comment", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Games.Game", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.DAL.Entities.GameStore.Comment", null)
                        .WithMany("Answers")
                        .HasForeignKey("ParentCommentId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.GenresInGames", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Games.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.DAL.Entities.Genres.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.OrderDetails", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.GameStore.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.PlatformsInGames", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Games.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.DAL.Entities.Platforms.PlatformType", "PlatformType")
                        .WithMany()
                        .HasForeignKey("PlatformTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("PlatformType");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Games.GameTranslate", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Games.Game", "Game")
                        .WithMany("Translations")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.Genre", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Genres.Genre", null)
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentGenreId");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.GenreTranslate", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Genres.Genre", "Genre")
                        .WithMany("Translations")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Platforms.PlatformTypeTranslate", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Platforms.PlatformType", "PlatformType")
                        .WithMany("Translations")
                        .HasForeignKey("PlatformTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlatformType");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Publishers.PublisherTranslate", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Publishers.Publisher", "Publisher")
                        .WithMany("Translations")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.Comment", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GameStore.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Games.Game", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.Genre", b =>
                {
                    b.Navigation("SubGenres");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Platforms.PlatformType", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Publishers.Publisher", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
