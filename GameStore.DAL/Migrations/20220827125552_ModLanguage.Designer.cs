// <auto-generated />
using System;
using GameStore.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameStore.DAL.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20220827125552_ModLanguage")]
    partial class ModLanguage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GameStore.DAL.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GameId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsQuote")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("ParentCommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Games.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("NumberOfViews")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityPerUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("int");

                    b.Property<short>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<int>("UnitsOnOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 438, DateTimeKind.Utc).AddTicks(9964),
                            Description = "New part of Stalker",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "stalker-2",
                            Name = "Stalker2",
                            NumberOfViews = 0,
                            Price = 70m,
                            PublishedAt = new DateTime(2022, 5, 19, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2174),
                            PublisherName = "GSC",
                            ReorderLevel = 0,
                            UnitsInStock = (short)10,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2433),
                            Description = "Best part",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "dying-light",
                            Name = "Dying light",
                            NumberOfViews = 0,
                            Price = 50m,
                            PublishedAt = new DateTime(2022, 7, 8, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2578),
                            PublisherName = "DeepSiler",
                            ReorderLevel = 0,
                            UnitsInStock = (short)0,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2588),
                            Description = "Action ",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "left-4-dead",
                            Name = "Left 4 Dead",
                            NumberOfViews = 0,
                            Price = 100m,
                            PublishedAt = new DateTime(2021, 7, 23, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2590),
                            PublisherName = "GSC",
                            ReorderLevel = 0,
                            UnitsInStock = (short)3,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 4,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2593),
                            Description = "Description of cmv",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "call-of-duty-mv",
                            Name = "Call of Duty:MV",
                            NumberOfViews = 0,
                            Price = 30m,
                            PublishedAt = new DateTime(2022, 8, 20, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2594),
                            PublisherName = "Activision",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 5,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2596),
                            Description = "Description of civ",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "civiization-VI",
                            Name = "Sid Meier`s Civilization VI",
                            NumberOfViews = 0,
                            Price = 60m,
                            PublishedAt = new DateTime(2022, 7, 28, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2597),
                            PublisherName = "Firaxis",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 6,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2600),
                            Description = "Description of arma",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "arma-3",
                            Name = "Arma 3",
                            NumberOfViews = 0,
                            Price = 80m,
                            PublishedAt = new DateTime(2022, 6, 28, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2601),
                            PublisherName = "Bohemia Interactive",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 7,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2603),
                            Description = "Description of nfs",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "nfs",
                            Name = "Need for speed",
                            NumberOfViews = 0,
                            Price = 100m,
                            PublishedAt = new DateTime(2022, 7, 8, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2604),
                            PublisherName = "GSC",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 8,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2606),
                            Description = "Description of Sam",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "serious-sam-4",
                            Name = "Serious Sam 4",
                            NumberOfViews = 0,
                            Price = 45m,
                            PublishedAt = new DateTime(2022, 8, 12, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2607),
                            PublisherName = "Activision",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 9,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2610),
                            Description = "Description of Sea",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "sea-of-thieves",
                            Name = "Sea of Thieves",
                            NumberOfViews = 0,
                            Price = 90m,
                            PublishedAt = new DateTime(2022, 7, 8, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2612),
                            PublisherName = "GSC",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 10,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2614),
                            Description = "Description of Battlefield",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "battlefield-4",
                            Name = "Battlefield 4",
                            NumberOfViews = 0,
                            Price = 100m,
                            PublishedAt = new DateTime(2022, 7, 28, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2615),
                            PublisherName = "Firaxis",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 11,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2617),
                            Description = "Description of Mass effect 1",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "mass-effect-1",
                            Name = "Mass effect 1",
                            NumberOfViews = 0,
                            Price = 50m,
                            PublishedAt = new DateTime(2022, 8, 7, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2618),
                            PublisherName = "DeepSiler",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        },
                        new
                        {
                            Id = 12,
                            AddedAt = new DateTime(2022, 8, 27, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2620),
                            Description = "Description of Command and conqurer",
                            Discontinued = false,
                            IsDeleted = false,
                            Key = "command-and-conqurer",
                            Name = "Command and conqurer",
                            NumberOfViews = 0,
                            Price = 150m,
                            PublishedAt = new DateTime(2022, 6, 28, 12, 55, 51, 439, DateTimeKind.Utc).AddTicks(2621),
                            PublisherName = "Activision",
                            ReorderLevel = 0,
                            UnitsInStock = (short)5,
                            UnitsOnOrder = 0
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Games.GameTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityPerUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("GameTranslates");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ParentGenreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ParentGenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "RTS",
                            ParentGenreId = 1
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "TBS",
                            ParentGenreId = 1
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Races"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Rally",
                            ParentGenreId = 6
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Arcade",
                            ParentGenreId = 6
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Formula",
                            ParentGenreId = 6
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Off-road",
                            ParentGenreId = 6
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "FPS",
                            ParentGenreId = 11
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "TPS",
                            ParentGenreId = 11
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Name = "Puzzle & Skill"
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            Name = "Misc"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 1,
                            Description = "Soft drinks, coffees, teas, beers, and ales",
                            IsDeleted = false,
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            Description = "Sweet and savory sauces, relishes, spreads, and seasonings",
                            IsDeleted = false,
                            Name = "Condiments"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 3,
                            Description = "Desserts, candies, and sweet breads",
                            IsDeleted = false,
                            Name = "Confections"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            Description = "Cheeses",
                            IsDeleted = false,
                            Name = "Dairy Products"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 5,
                            Description = "Breads, crackers, pasta, and cereal",
                            IsDeleted = false,
                            Name = "Grains/Cereals"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 6,
                            Description = "Prepared meats",
                            IsDeleted = false,
                            Name = "Meat/Poultry"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 7,
                            Description = "Dried fruit and bean curd",
                            IsDeleted = false,
                            Name = "Produce"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 8,
                            Description = "Seaweed and fish",
                            IsDeleted = false,
                            Name = "Seafood"
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.GenreTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("GenreTranslates");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GenresInGames", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("GenreId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("GenresInGames");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GameId = 1
                        },
                        new
                        {
                            GenreId = 3,
                            GameId = 2
                        },
                        new
                        {
                            GenreId = 5,
                            GameId = 3
                        },
                        new
                        {
                            GenreId = 11,
                            GameId = 4
                        },
                        new
                        {
                            GenreId = 3,
                            GameId = 5
                        },
                        new
                        {
                            GenreId = 11,
                            GameId = 6
                        },
                        new
                        {
                            GenreId = 6,
                            GameId = 7
                        },
                        new
                        {
                            GenreId = 12,
                            GameId = 8
                        },
                        new
                        {
                            GenreId = 14,
                            GameId = 9
                        },
                        new
                        {
                            GenreId = 7,
                            GameId = 10
                        },
                        new
                        {
                            GenreId = 8,
                            GameId = 11
                        },
                        new
                        {
                            GenreId = 8,
                            GameId = 12
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipPostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipRegion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShipperCompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("GameKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GameKey");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Platforms.PlatformType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("PlatformTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Type = "Mobile"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Type = "Browser"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Type = "Desktop"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Type = "Console"
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Platforms.PlatformTypeTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlatformTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlatformTypeId");

                    b.ToTable("PlatformTypeTranslates");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.PlatformsInGames", b =>
                {
                    b.Property<int>("PlatformTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.HasKey("PlatformTypeId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("PlatformsInGames");

                    b.HasData(
                        new
                        {
                            PlatformTypeId = 1,
                            GameId = 1
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            GameId = 1
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            GameId = 2
                        },
                        new
                        {
                            PlatformTypeId = 4,
                            GameId = 3
                        },
                        new
                        {
                            PlatformTypeId = 3,
                            GameId = 4
                        },
                        new
                        {
                            PlatformTypeId = 3,
                            GameId = 5
                        },
                        new
                        {
                            PlatformTypeId = 3,
                            GameId = 6
                        },
                        new
                        {
                            PlatformTypeId = 1,
                            GameId = 7
                        },
                        new
                        {
                            PlatformTypeId = 4,
                            GameId = 8
                        },
                        new
                        {
                            PlatformTypeId = 4,
                            GameId = 9
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            GameId = 10
                        },
                        new
                        {
                            PlatformTypeId = 1,
                            GameId = 11
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            GameId = 12
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Publishers.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("ntext");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyName")
                        .IsUnique();

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "DeepSilver",
                            Description = "Desc of Publisher 1 ",
                            HomePage = "Home",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "GSC",
                            Description = "Desc of Publisher 2 ",
                            HomePage = "Home2",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Activision",
                            Description = "Desc of Activision",
                            HomePage = "Activision page",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "Firaxis",
                            Description = "Desc of Firaxis",
                            HomePage = "Firaxis page",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            CompanyName = "Bohemia Interactive",
                            Description = "Desc of bohemia",
                            HomePage = "Bohemia page",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Publishers.PublisherTranslate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("PublisherTranslates");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "a207038d-70ee-496b-abe7-c7dc262b94dd",
                            Email = "admin@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 226, 96, 107, 61, 75, 119, 30, 68, 74, 180, 221, 44, 160, 39, 72, 207, 208, 110, 138, 119, 134, 173, 21, 249, 144, 62, 77, 250, 29, 160, 122, 132, 118, 133, 170, 246, 8, 48, 132, 44, 200, 21, 40, 31, 76, 51, 128, 78, 72, 180, 186, 218, 245, 249, 74, 37, 140, 142, 188, 199, 58, 119, 16, 217 },
                            PasswordSalt = new byte[] { 168, 101, 183, 51, 97, 8, 53, 253, 18, 215, 200, 98, 7, 93, 161, 33, 129, 54, 195, 67, 60, 93, 176, 9 },
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            Id = "617a717c-4e4b-464f-ba51-a355a305b172",
                            Email = "user1@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 220, 253, 58, 21, 155, 31, 27, 101, 15, 192, 26, 239, 115, 247, 75, 90, 110, 78, 227, 200, 153, 239, 72, 101, 4, 253, 164, 63, 135, 1, 184, 231, 57, 124, 207, 71, 133, 251, 68, 208, 147, 18, 60, 103, 153, 133, 154, 206, 246, 175, 23, 54, 235, 232, 76, 232, 12, 110, 95, 215, 214, 226, 205, 13 },
                            PasswordSalt = new byte[] { 115, 45, 201, 80, 22, 24, 13, 151, 134, 103, 40, 62, 189, 175, 72, 215, 170, 88, 245, 73, 101, 255, 189, 234 },
                            Role = "User",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = "9ac9bede-9072-4798-ba23-1dc6d2ef23b2",
                            Email = "manager1@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 241, 19, 39, 66, 12, 253, 194, 230, 182, 59, 37, 6, 227, 71, 64, 162, 47, 33, 27, 41, 232, 228, 44, 169, 54, 8, 53, 102, 229, 234, 123, 239, 197, 175, 128, 156, 13, 99, 46, 41, 50, 83, 252, 56, 72, 145, 125, 133, 66, 173, 62, 247, 21, 112, 86, 11, 114, 72, 239, 74, 6, 71, 186, 211 },
                            PasswordSalt = new byte[] { 13, 165, 181, 1, 43, 165, 177, 163, 10, 6, 32, 206, 175, 93, 200, 101, 208, 57, 247, 157, 215, 47, 213, 143 },
                            Role = "Manager",
                            UserName = "manager1"
                        },
                        new
                        {
                            Id = "c73e3451-c0b8-4b64-90e0-98882971d9bf",
                            Email = "moderator@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 247, 174, 164, 237, 8, 154, 34, 158, 125, 25, 103, 101, 244, 252, 140, 199, 198, 62, 254, 203, 128, 212, 239, 20, 28, 196, 161, 131, 253, 59, 131, 176, 10, 136, 131, 37, 162, 156, 47, 101, 175, 199, 206, 162, 191, 104, 252, 127, 98, 144, 120, 164, 250, 26, 111, 235, 151, 233, 30, 18, 36, 111, 136, 153 },
                            PasswordSalt = new byte[] { 197, 233, 171, 99, 42, 46, 124, 63, 126, 204, 53, 32, 201, 68, 49, 219, 157, 213, 87, 59, 114, 5, 232, 177 },
                            Role = "Moderator",
                            UserName = "moderator1"
                        },
                        new
                        {
                            Id = "3f8e3979-706e-4064-b987-65b8c83166eb",
                            Email = "publisher1@gmail.com",
                            IsDeleted = false,
                            PasswordHash = new byte[] { 54, 176, 234, 71, 198, 159, 241, 16, 222, 219, 31, 63, 223, 126, 23, 250, 171, 14, 135, 242, 120, 114, 26, 214, 73, 240, 67, 224, 220, 218, 204, 227, 47, 213, 73, 6, 151, 61, 24, 24, 57, 31, 183, 97, 203, 62, 135, 134, 53, 190, 58, 168, 95, 152, 161, 202, 139, 220, 175, 116, 91, 50, 24, 5 },
                            PasswordSalt = new byte[] { 85, 250, 12, 199, 166, 34, 144, 41, 223, 196, 7, 163, 129, 93, 245, 124, 221, 24, 21, 246, 253, 246, 199, 127 },
                            PublisherName = "DeepSilver",
                            Role = "Publisher",
                            UserName = "publisher1"
                        });
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Comment", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Games.Game", "Game")
                        .WithMany("Comments")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.DAL.Entities.Comment", null)
                        .WithMany("Answers")
                        .HasForeignKey("ParentCommentId");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Games.GameTranslate", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Games.Game", "Game")
                        .WithMany("Translations")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.Genre", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Genres.Genre", null)
                        .WithMany("SubGenres")
                        .HasForeignKey("ParentGenreId");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.GenreTranslate", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Genres.Genre", "Genre")
                        .WithMany("Translations")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.GenresInGames", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Games.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.DAL.Entities.Genres.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.OrderDetails", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Platforms.PlatformTypeTranslate", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Platforms.PlatformType", "PlatformType")
                        .WithMany("Translations")
                        .HasForeignKey("PlatformTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlatformType");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.PlatformsInGames", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Games.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameStore.DAL.Entities.Platforms.PlatformType", "PlatformType")
                        .WithMany()
                        .HasForeignKey("PlatformTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("PlatformType");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Publishers.PublisherTranslate", b =>
                {
                    b.HasOne("GameStore.DAL.Entities.Publishers.Publisher", "Publisher")
                        .WithMany("Translations")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Comment", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Games.Game", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Genres.Genre", b =>
                {
                    b.Navigation("SubGenres");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Platforms.PlatformType", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("GameStore.DAL.Entities.Publishers.Publisher", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
